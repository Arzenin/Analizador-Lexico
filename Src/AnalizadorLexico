protocolo_inseguro      ("http://"|" http://")
protocolo_seguro        ("https://"|" http://")
dominio                 (("www.")?[a-zA-Z]+\.("com"|"es"|"org"|"net"|"edu"|"gov"))
s_ipv4                  (([0-1]?[0-9]?[0-9])|[2][0-4][0-9]|[2][5][0-5])
ipv4                    ({s_ipv4}\.{s_ipv4}\.{s_ipv4}\.{s_ipv4})
url_dominio_seguro      ^({protocolo_seguro}{dominio})$
url_dominio_inseguro    ^({protocolo_inseguro}{dominio})$
ip_seguro               ^({protocolo_seguro}{ipv4})$
ip_inseguro             ^({protocolo_inseguro}{ipv4})$

%{
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    int numurl=0,numprotocolo_inseguro=0,numline=1,numword=0;
    int numprotocolo_seguro=0,numdominio=0,numipv4=0,numchar=0;
    char* ip_s = NULL;
    char* ip_u = NULL;
    char* dom_s = NULL;
    char* dom_u = NULL;
    
%}

%%

{ip_inseguro}           {numurl++;numipv4++;numprotocolo_inseguro++;
                        char numer[50]; 
                        sprintf(numer, "Num line: %d \tIP:  ",numline);
                        ip_u = realloc(ip_u,strlen(ip_u) + strlen(yytext) + strlen((char*)numer) + 3);
                        strcat(ip_u,"\n");
                        strcat(ip_u,"\t");
                        strcat(ip_u,numer);
                        strcat(ip_u,yytext);
                        }

{ip_seguro}             {numurl++;numipv4++;numprotocolo_seguro++;
                        char numer[50]; 
                        sprintf(numer, "Num line: %d \tIP:  ", numline);
                        ip_s = realloc(ip_s,strlen(ip_s) + strlen(yytext) + strlen((char*)numer) + 3);
                        strcat(ip_s,"\n");
                        strcat(ip_s,"\t");
                        strcat(ip_s,numer);
                        strcat(ip_s,yytext);
                        }

{url_dominio_inseguro}  {numurl++;numdominio++;numprotocolo_inseguro++;
                        char numer[50]; 
                        sprintf(numer, "Num line: %d \tURL: ", numline);
                        dom_u = realloc(dom_u,strlen(dom_u) + strlen(yytext) + strlen((char*)numer) + 3);
                        strcat(dom_u,"\n");
                        strcat(dom_u,"\t");
                        strcat(dom_u,numer);
                        strcat(dom_u,yytext);
                        }

{url_dominio_seguro}    {numurl++;numdominio++;numprotocolo_seguro++;
                        char numer[50]; 
                        sprintf(numer, "Num line: %d \tURL: ", numline);
                        dom_s = realloc(dom_s,strlen(dom_s) + strlen(yytext) + strlen((char*)numer) + 3);
                        strcat(dom_s,"\n");
                        strcat(dom_s,"\t");
                        strcat(dom_s,numer);
                        strcat(dom_s,yytext);
                        }

\n                      {numline++;}

E                       {numword++;}

.                       {numchar++;}

%%

int main(){
    ip_u = realloc(ip_u,1);
    ip_s = realloc(ip_s,1);
    dom_u = realloc(dom_u,1);
    dom_s = realloc(dom_s,1);

    yylex();
    printf("Analisis del Prompt Introducido:\nNum lineas:%d\tNum Palabras:%d\tNum Caracteres:%d\n",
    numline,numword,numchar);
    printf("Num URL/IP: %d\nNum Protocolo HTTP: %d\tNum Protocolo HTTPS: %d\tNum IPV4: %d\tNum URL: %d\n",
    numurl,numprotocolo_inseguro,numprotocolo_seguro,numipv4,numdominio);
    if(dom_u!=" "||ip_u!=" "){
        printf("\nURL e IP con protocolo HTTP:\n%s%s\n",dom_u,ip_u);
    }
    if(dom_s!=" "||ip_s!=" "){
        printf("\nURL e IP con protocolo HTTPS:\n%s%s\n",dom_s,ip_s);
        
    }
    if(ip_u!=" "||ip_s!=" "){
        printf("\nDIRECCION IP:\n%s%s\n",ip_u,ip_s);
    }
    if(dom_u!=" "||dom_s!=" "){
        printf("\nDIRECCION URL:\n%s%s\n",dom_u,dom_s);
    }
    
    free(ip_u);
    free(ip_s);
    free(dom_u);
    free(dom_s);

    return 1;
    }